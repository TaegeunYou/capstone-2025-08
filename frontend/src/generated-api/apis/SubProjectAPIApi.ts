/* tslint:disable */
/* eslint-disable */
/**
 * Pathos
 * Pathos의 API 명세서입니다.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  SubProjectResponseDto,
} from '../models/index';
import {
    SubProjectResponseDtoFromJSON,
    SubProjectResponseDtoToJSON,
} from '../models/index';

export interface GetSubProjectRequest {
    subProjectId: number;
}

/**
 * 
 */
export class SubProjectAPIApi extends runtime.BaseAPI {

    /**
     * 서브 프로젝트 ID로 해당 서브 프로젝트의 상세 정보를 조회합니다.
     * 서브 프로젝트 상세 조회
     */
    async getSubProjectRaw(requestParameters: GetSubProjectRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<SubProjectResponseDto>> {
        if (requestParameters['subProjectId'] == null) {
            throw new runtime.RequiredError(
                'subProjectId',
                'Required parameter "subProjectId" was null or undefined when calling getSubProject().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/subprojects/{subProjectId}`.replace(`{${"subProjectId"}}`, encodeURIComponent(String(requestParameters['subProjectId']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => SubProjectResponseDtoFromJSON(jsonValue));
    }

    /**
     * 서브 프로젝트 ID로 해당 서브 프로젝트의 상세 정보를 조회합니다.
     * 서브 프로젝트 상세 조회
     */
    async getSubProject(requestParameters: GetSubProjectRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<SubProjectResponseDto> {
        const response = await this.getSubProjectRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
