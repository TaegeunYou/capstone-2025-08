/* tslint:disable */
/* eslint-disable */
/**
 * Pathos
 * Pathos의 API 명세서입니다.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  TrainingResultRequestDto,
} from '../models/index';
import {
    TrainingResultRequestDtoFromJSON,
    TrainingResultRequestDtoToJSON,
} from '../models/index';

export interface RequestTrainingRequest {
    annotationHistoryId: number;
}

export interface ResponseTrainingRequest {
    trainingResultRequestDto: TrainingResultRequestDto;
}

/**
 * 
 */
export class ModelServerControllerApi extends runtime.BaseAPI {

    /**
     */
    async requestTrainingRaw(requestParameters: RequestTrainingRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['annotationHistoryId'] == null) {
            throw new runtime.RequiredError(
                'annotationHistoryId',
                'Required parameter "annotationHistoryId" was null or undefined when calling requestTraining().'
            );
        }

        const queryParameters: any = {};

        if (requestParameters['annotationHistoryId'] != null) {
            queryParameters['annotation_history_id'] = requestParameters['annotationHistoryId'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/api/model-server/training`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async requestTraining(requestParameters: RequestTrainingRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.requestTrainingRaw(requestParameters, initOverrides);
    }

    /**
     */
    async responseTrainingRaw(requestParameters: ResponseTrainingRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['trainingResultRequestDto'] == null) {
            throw new runtime.RequiredError(
                'trainingResultRequestDto',
                'Required parameter "trainingResultRequestDto" was null or undefined when calling responseTraining().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        const response = await this.request({
            path: `/api/model-server/training/result`,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: TrainingResultRequestDtoToJSON(requestParameters['trainingResultRequestDto']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     */
    async responseTraining(requestParameters: ResponseTrainingRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.responseTrainingRaw(requestParameters, initOverrides);
    }

}
