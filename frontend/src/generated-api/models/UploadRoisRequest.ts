/* tslint:disable */
/* eslint-disable */
/**
 * Pathos
 * Pathos의 API 명세서입니다.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RoiSaveRequestDto } from './RoiSaveRequestDto';
import {
    RoiSaveRequestDtoFromJSON,
    RoiSaveRequestDtoFromJSONTyped,
    RoiSaveRequestDtoToJSON,
    RoiSaveRequestDtoToJSONTyped,
} from './RoiSaveRequestDto';

/**
 * 
 * @export
 * @interface UploadRoisRequest
 */
export interface UploadRoisRequest {
    /**
     * 
     * @type {number}
     * @memberof UploadRoisRequest
     */
    subProjectId: number;
    /**
     * 
     * @type {number}
     * @memberof UploadRoisRequest
     */
    annotationHistoryId: number;
    /**
     * 
     * @type {Array<RoiSaveRequestDto>}
     * @memberof UploadRoisRequest
     */
    rois: Array<RoiSaveRequestDto>;
    /**
     * 
     * @type {Array<Blob>}
     * @memberof UploadRoisRequest
     */
    images: Array<Blob>;
}

/**
 * Check if a given object implements the UploadRoisRequest interface.
 */
export function instanceOfUploadRoisRequest(value: object): value is UploadRoisRequest {
    if (!('subProjectId' in value) || value['subProjectId'] === undefined) return false;
    if (!('annotationHistoryId' in value) || value['annotationHistoryId'] === undefined) return false;
    if (!('rois' in value) || value['rois'] === undefined) return false;
    if (!('images' in value) || value['images'] === undefined) return false;
    return true;
}

export function UploadRoisRequestFromJSON(json: any): UploadRoisRequest {
    return UploadRoisRequestFromJSONTyped(json, false);
}

export function UploadRoisRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): UploadRoisRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'subProjectId': json['subProjectId'],
        'annotationHistoryId': json['annotationHistoryId'],
        'rois': ((json['rois'] as Array<any>).map(RoiSaveRequestDtoFromJSON)),
        'images': json['images'],
    };
}

export function UploadRoisRequestToJSON(json: any): UploadRoisRequest {
    return UploadRoisRequestToJSONTyped(json, false);
}

export function UploadRoisRequestToJSONTyped(value?: UploadRoisRequest | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'subProjectId': value['subProjectId'],
        'annotationHistoryId': value['annotationHistoryId'],
        'rois': ((value['rois'] as Array<any>).map(RoiSaveRequestDtoToJSON)),
        'images': value['images'],
    };
}

