/* tslint:disable */
/* eslint-disable */
/**
 * Pathos
 * Pathos의 API 명세서입니다.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ModelsDto } from './ModelsDto';
import {
    ModelsDtoFromJSON,
    ModelsDtoFromJSONTyped,
    ModelsDtoToJSON,
    ModelsDtoToJSONTyped,
} from './ModelsDto';
import type { SubProjectSummaryDto } from './SubProjectSummaryDto';
import {
    SubProjectSummaryDtoFromJSON,
    SubProjectSummaryDtoFromJSONTyped,
    SubProjectSummaryDtoToJSON,
    SubProjectSummaryDtoToJSONTyped,
} from './SubProjectSummaryDto';
import type { ProjectLabelDto } from './ProjectLabelDto';
import {
    ProjectLabelDtoFromJSON,
    ProjectLabelDtoFromJSONTyped,
    ProjectLabelDtoToJSON,
    ProjectLabelDtoToJSONTyped,
} from './ProjectLabelDto';

/**
 * 프로젝트 어노테이션 화면을 조회할 때 사용하는 응답 DTO
 * @export
 * @interface GetProjectAnnotationResponseDto
 */
export interface GetProjectAnnotationResponseDto {
    /**
     * 프로젝트 ID
     * @type {number}
     * @memberof GetProjectAnnotationResponseDto
     */
    projectId?: number;
    /**
     * 프로젝트 제목
     * @type {string}
     * @memberof GetProjectAnnotationResponseDto
     */
    title?: string;
    /**
     * 
     * @type {ModelsDto}
     * @memberof GetProjectAnnotationResponseDto
     */
    modelsDto?: ModelsDto;
    /**
     * 프로젝트 라벨 리스트
     * @type {Array<ProjectLabelDto>}
     * @memberof GetProjectAnnotationResponseDto
     */
    labels?: Array<ProjectLabelDto>;
    /**
     * 서브 프로젝트 요약 정보 리스트
     * @type {Array<SubProjectSummaryDto>}
     * @memberof GetProjectAnnotationResponseDto
     */
    subProjects?: Array<SubProjectSummaryDto>;
    /**
     * 첫 번째 서브프로젝트 아이디
     * @type {number}
     * @memberof GetProjectAnnotationResponseDto
     */
    firstSubProjectId?: number;
}

/**
 * Check if a given object implements the GetProjectAnnotationResponseDto interface.
 */
export function instanceOfGetProjectAnnotationResponseDto(value: object): value is GetProjectAnnotationResponseDto {
    return true;
}

export function GetProjectAnnotationResponseDtoFromJSON(json: any): GetProjectAnnotationResponseDto {
    return GetProjectAnnotationResponseDtoFromJSONTyped(json, false);
}

export function GetProjectAnnotationResponseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetProjectAnnotationResponseDto {
    if (json == null) {
        return json;
    }
    return {
        
        'projectId': json['projectId'] == null ? undefined : json['projectId'],
        'title': json['title'] == null ? undefined : json['title'],
        'modelsDto': json['modelsDto'] == null ? undefined : ModelsDtoFromJSON(json['modelsDto']),
        'labels': json['labels'] == null ? undefined : ((json['labels'] as Array<any>).map(ProjectLabelDtoFromJSON)),
        'subProjects': json['subProjects'] == null ? undefined : ((json['subProjects'] as Array<any>).map(SubProjectSummaryDtoFromJSON)),
        'firstSubProjectId': json['firstSubProjectId'] == null ? undefined : json['firstSubProjectId'],
    };
}

export function GetProjectAnnotationResponseDtoToJSON(json: any): GetProjectAnnotationResponseDto {
    return GetProjectAnnotationResponseDtoToJSONTyped(json, false);
}

export function GetProjectAnnotationResponseDtoToJSONTyped(value?: GetProjectAnnotationResponseDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'projectId': value['projectId'],
        'title': value['title'],
        'modelsDto': ModelsDtoToJSON(value['modelsDto']),
        'labels': value['labels'] == null ? undefined : ((value['labels'] as Array<any>).map(ProjectLabelDtoToJSON)),
        'subProjects': value['subProjects'] == null ? undefined : ((value['subProjects'] as Array<any>).map(SubProjectSummaryDtoToJSON)),
        'firstSubProjectId': value['firstSubProjectId'],
    };
}

