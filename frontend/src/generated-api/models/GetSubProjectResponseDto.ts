/* tslint:disable */
/* eslint-disable */
/**
 * Pathos
 * Pathos의 API 명세서입니다.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { SubProjectSummaryDto } from './SubProjectSummaryDto';
import {
    SubProjectSummaryDtoFromJSON,
    SubProjectSummaryDtoFromJSONTyped,
    SubProjectSummaryDtoToJSON,
    SubProjectSummaryDtoToJSONTyped,
} from './SubProjectSummaryDto';

/**
 * 프로젝트 상세에서 서브 프로젝트들을 조회할 때 사용하는 응답 DTO
 * @export
 * @interface GetSubProjectResponseDto
 */
export interface GetSubProjectResponseDto {
    /**
     * 프로젝트 ID
     * @type {number}
     * @memberof GetSubProjectResponseDto
     */
    projectId?: number;
    /**
     * 프로젝트 제목
     * @type {string}
     * @memberof GetSubProjectResponseDto
     */
    title?: string;
    /**
     * 서브 프로젝트 요약 정보 리스트
     * @type {Array<SubProjectSummaryDto>}
     * @memberof GetSubProjectResponseDto
     */
    subProjects?: Array<SubProjectSummaryDto>;
}

/**
 * Check if a given object implements the GetSubProjectResponseDto interface.
 */
export function instanceOfGetSubProjectResponseDto(value: object): value is GetSubProjectResponseDto {
    return true;
}

export function GetSubProjectResponseDtoFromJSON(json: any): GetSubProjectResponseDto {
    return GetSubProjectResponseDtoFromJSONTyped(json, false);
}

export function GetSubProjectResponseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetSubProjectResponseDto {
    if (json == null) {
        return json;
    }
    return {
        
        'projectId': json['projectId'] == null ? undefined : json['projectId'],
        'title': json['title'] == null ? undefined : json['title'],
        'subProjects': json['subProjects'] == null ? undefined : ((json['subProjects'] as Array<any>).map(SubProjectSummaryDtoFromJSON)),
    };
}

export function GetSubProjectResponseDtoToJSON(json: any): GetSubProjectResponseDto {
    return GetSubProjectResponseDtoToJSONTyped(json, false);
}

export function GetSubProjectResponseDtoToJSONTyped(value?: GetSubProjectResponseDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'projectId': value['projectId'],
        'title': value['title'],
        'subProjects': value['subProjects'] == null ? undefined : ((value['subProjects'] as Array<any>).map(SubProjectSummaryDtoToJSON)),
    };
}

