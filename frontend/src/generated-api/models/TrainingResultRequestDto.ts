/* tslint:disable */
/* eslint-disable */
/**
 * Pathos
 * Pathos의 API 명세서입니다.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { LabelInfo } from './LabelInfo';
import {
    LabelInfoFromJSON,
    LabelInfoFromJSONTyped,
    LabelInfoToJSON,
    LabelInfoToJSONTyped,
} from './LabelInfo';
import type { Performance } from './Performance';
import {
    PerformanceFromJSON,
    PerformanceFromJSONTyped,
    PerformanceToJSON,
    PerformanceToJSONTyped,
} from './Performance';
import type { SubProjectInfo } from './SubProjectInfo';
import {
    SubProjectInfoFromJSON,
    SubProjectInfoFromJSONTyped,
    SubProjectInfoToJSON,
    SubProjectInfoToJSONTyped,
} from './SubProjectInfo';

/**
 * 모델 학습 결과 데이터
 * @export
 * @interface TrainingResultRequestDto
 */
export interface TrainingResultRequestDto {
    /**
     * 학습 기록 ID
     * @type {number}
     * @memberof TrainingResultRequestDto
     */
    trainingHistoryId?: number;
    /**
     * 추론 기록 ID
     * @type {number}
     * @memberof TrainingResultRequestDto
     */
    inferenceHistoryId?: number;
    /**
     * 요청 타입
     * @type {string}
     * @memberof TrainingResultRequestDto
     */
    type?: TrainingResultRequestDtoTypeEnum;
    /**
     * 모델 종류
     * @type {string}
     * @memberof TrainingResultRequestDto
     */
    modelType?: TrainingResultRequestDtoModelTypeEnum;
    /**
     * 모델 이름
     * @type {string}
     * @memberof TrainingResultRequestDto
     */
    modelName?: string;
    /**
     * 생성된 티슈 모델 경로
     * @type {string}
     * @memberof TrainingResultRequestDto
     */
    tissueModelPath?: string;
    /**
     * 생성된 셀 모델 경로
     * @type {string}
     * @memberof TrainingResultRequestDto
     */
    cellModelPath?: string;
    /**
     * 모델 라벨 정보 목록
     * @type {Array<LabelInfo>}
     * @memberof TrainingResultRequestDto
     */
    labels?: Array<LabelInfo>;
    /**
     * SubProject 정보 목록
     * @type {Array<SubProjectInfo>}
     * @memberof TrainingResultRequestDto
     */
    subProjects?: Array<SubProjectInfo>;
    /**
     * 
     * @type {Performance}
     * @memberof TrainingResultRequestDto
     */
    performance?: Performance;
}


/**
 * @export
 */
export const TrainingResultRequestDtoTypeEnum = {
    Inference: 'INFERENCE',
    TrainingInference: 'TRAINING_INFERENCE'
} as const;
export type TrainingResultRequestDtoTypeEnum = typeof TrainingResultRequestDtoTypeEnum[keyof typeof TrainingResultRequestDtoTypeEnum];

/**
 * @export
 */
export const TrainingResultRequestDtoModelTypeEnum = {
    Tissue: 'TISSUE',
    Cell: 'CELL',
    Multi: 'MULTI'
} as const;
export type TrainingResultRequestDtoModelTypeEnum = typeof TrainingResultRequestDtoModelTypeEnum[keyof typeof TrainingResultRequestDtoModelTypeEnum];


/**
 * Check if a given object implements the TrainingResultRequestDto interface.
 */
export function instanceOfTrainingResultRequestDto(value: object): value is TrainingResultRequestDto {
    return true;
}

export function TrainingResultRequestDtoFromJSON(json: any): TrainingResultRequestDto {
    return TrainingResultRequestDtoFromJSONTyped(json, false);
}

export function TrainingResultRequestDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): TrainingResultRequestDto {
    if (json == null) {
        return json;
    }
    return {
        
        'trainingHistoryId': json['trainingHistoryId'] == null ? undefined : json['trainingHistoryId'],
        'inferenceHistoryId': json['inferenceHistoryId'] == null ? undefined : json['inferenceHistoryId'],
        'type': json['type'] == null ? undefined : json['type'],
        'modelType': json['modelType'] == null ? undefined : json['modelType'],
        'modelName': json['modelName'] == null ? undefined : json['modelName'],
        'tissueModelPath': json['tissueModelPath'] == null ? undefined : json['tissueModelPath'],
        'cellModelPath': json['cellModelPath'] == null ? undefined : json['cellModelPath'],
        'labels': json['labels'] == null ? undefined : ((json['labels'] as Array<any>).map(LabelInfoFromJSON)),
        'subProjects': json['subProjects'] == null ? undefined : ((json['subProjects'] as Array<any>).map(SubProjectInfoFromJSON)),
        'performance': json['performance'] == null ? undefined : PerformanceFromJSON(json['performance']),
    };
}

export function TrainingResultRequestDtoToJSON(json: any): TrainingResultRequestDto {
    return TrainingResultRequestDtoToJSONTyped(json, false);
}

export function TrainingResultRequestDtoToJSONTyped(value?: TrainingResultRequestDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'trainingHistoryId': value['trainingHistoryId'],
        'inferenceHistoryId': value['inferenceHistoryId'],
        'type': value['type'],
        'modelType': value['modelType'],
        'modelName': value['modelName'],
        'tissueModelPath': value['tissueModelPath'],
        'cellModelPath': value['cellModelPath'],
        'labels': value['labels'] == null ? undefined : ((value['labels'] as Array<any>).map(LabelInfoToJSON)),
        'subProjects': value['subProjects'] == null ? undefined : ((value['subProjects'] as Array<any>).map(SubProjectInfoToJSON)),
        'performance': PerformanceToJSON(value['performance']),
    };
}

