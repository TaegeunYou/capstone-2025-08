/* tslint:disable */
/* eslint-disable */
/**
 * Pathos
 * Pathos의 API 명세서입니다.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { RoiResponsePayload } from './RoiResponsePayload';
import {
    RoiResponsePayloadFromJSON,
    RoiResponsePayloadFromJSONTyped,
    RoiResponsePayloadToJSON,
    RoiResponsePayloadToJSONTyped,
} from './RoiResponsePayload';
import type { LabelDto } from './LabelDto';
import {
    LabelDtoFromJSON,
    LabelDtoFromJSONTyped,
    LabelDtoToJSON,
    LabelDtoToJSONTyped,
} from './LabelDto';

/**
 * 
 * @export
 * @interface AnnotationHistoryResponseDto
 */
export interface AnnotationHistoryResponseDto {
    /**
     * 
     * @type {number}
     * @memberof AnnotationHistoryResponseDto
     */
    id?: number;
    /**
     * 
     * @type {string}
     * @memberof AnnotationHistoryResponseDto
     */
    modelName?: string;
    /**
     * 
     * @type {Array<RoiResponsePayload>}
     * @memberof AnnotationHistoryResponseDto
     */
    roiPayloads?: Array<RoiResponsePayload>;
    /**
     * 
     * @type {Array<LabelDto>}
     * @memberof AnnotationHistoryResponseDto
     */
    labels?: Array<LabelDto>;
}

/**
 * Check if a given object implements the AnnotationHistoryResponseDto interface.
 */
export function instanceOfAnnotationHistoryResponseDto(value: object): value is AnnotationHistoryResponseDto {
    return true;
}

export function AnnotationHistoryResponseDtoFromJSON(json: any): AnnotationHistoryResponseDto {
    return AnnotationHistoryResponseDtoFromJSONTyped(json, false);
}

export function AnnotationHistoryResponseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): AnnotationHistoryResponseDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'modelName': json['modelName'] == null ? undefined : json['modelName'],
        'roiPayloads': json['roiPayloads'] == null ? undefined : ((json['roiPayloads'] as Array<any>).map(RoiResponsePayloadFromJSON)),
        'labels': json['labels'] == null ? undefined : ((json['labels'] as Array<any>).map(LabelDtoFromJSON)),
    };
}

export function AnnotationHistoryResponseDtoToJSON(json: any): AnnotationHistoryResponseDto {
    return AnnotationHistoryResponseDtoToJSONTyped(json, false);
}

export function AnnotationHistoryResponseDtoToJSONTyped(value?: AnnotationHistoryResponseDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'modelName': value['modelName'],
        'roiPayloads': value['roiPayloads'] == null ? undefined : ((value['roiPayloads'] as Array<any>).map(RoiResponsePayloadToJSON)),
        'labels': value['labels'] == null ? undefined : ((value['labels'] as Array<any>).map(LabelDtoToJSON)),
    };
}

