/* tslint:disable */
/* eslint-disable */
/**
 * Pathos
 * Pathos의 API 명세서입니다.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ModelsDto } from './ModelsDto';
import {
    ModelsDtoFromJSON,
    ModelsDtoFromJSONTyped,
    ModelsDtoToJSON,
    ModelsDtoToJSONTyped,
} from './ModelsDto';

/**
 * 프로젝트 및 해당 프로젝트에 속한 모델 정보 DTO
 * @export
 * @interface ProjectModelsDto
 */
export interface ProjectModelsDto {
    /**
     * 프로젝트 ID
     * @type {number}
     * @memberof ProjectModelsDto
     */
    projectId?: number;
    /**
     * 프로젝트 제목
     * @type {string}
     * @memberof ProjectModelsDto
     */
    projectTitle?: string;
    /**
     * 해당 프로젝트에 속한 모델 리스트
     * @type {Array<ModelsDto>}
     * @memberof ProjectModelsDto
     */
    models?: Array<ModelsDto>;
}

/**
 * Check if a given object implements the ProjectModelsDto interface.
 */
export function instanceOfProjectModelsDto(value: object): value is ProjectModelsDto {
    return true;
}

export function ProjectModelsDtoFromJSON(json: any): ProjectModelsDto {
    return ProjectModelsDtoFromJSONTyped(json, false);
}

export function ProjectModelsDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ProjectModelsDto {
    if (json == null) {
        return json;
    }
    return {
        
        'projectId': json['projectId'] == null ? undefined : json['projectId'],
        'projectTitle': json['projectTitle'] == null ? undefined : json['projectTitle'],
        'models': json['models'] == null ? undefined : ((json['models'] as Array<any>).map(ModelsDtoFromJSON)),
    };
}

export function ProjectModelsDtoToJSON(json: any): ProjectModelsDto {
    return ProjectModelsDtoToJSONTyped(json, false);
}

export function ProjectModelsDtoToJSONTyped(value?: ProjectModelsDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'projectId': value['projectId'],
        'projectTitle': value['projectTitle'],
        'models': value['models'] == null ? undefined : ((value['models'] as Array<any>).map(ModelsDtoToJSON)),
    };
}

