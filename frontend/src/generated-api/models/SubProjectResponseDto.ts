/* tslint:disable */
/* eslint-disable */
/**
 * Pathos
 * Pathos의 API 명세서입니다.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AnnotationHistorySummaryDto } from './AnnotationHistorySummaryDto';
import {
    AnnotationHistorySummaryDtoFromJSON,
    AnnotationHistorySummaryDtoFromJSONTyped,
    AnnotationHistorySummaryDtoToJSON,
    AnnotationHistorySummaryDtoToJSONTyped,
} from './AnnotationHistorySummaryDto';
import type { ModelSummaryDto } from './ModelSummaryDto';
import {
    ModelSummaryDtoFromJSON,
    ModelSummaryDtoFromJSONTyped,
    ModelSummaryDtoToJSON,
    ModelSummaryDtoToJSONTyped,
} from './ModelSummaryDto';

/**
 * 
 * @export
 * @interface SubProjectResponseDto
 */
export interface SubProjectResponseDto {
    /**
     * 
     * @type {number}
     * @memberof SubProjectResponseDto
     */
    subProjectId?: number;
    /**
     * 
     * @type {Array<AnnotationHistorySummaryDto>}
     * @memberof SubProjectResponseDto
     */
    annotationHistories?: Array<AnnotationHistorySummaryDto>;
    /**
     * 
     * @type {number}
     * @memberof SubProjectResponseDto
     */
    latestAnnotationHistoryId?: number;
    /**
     * 
     * @type {Array<ModelSummaryDto>}
     * @memberof SubProjectResponseDto
     */
    availableModels?: Array<ModelSummaryDto>;
    /**
     * 
     * @type {string}
     * @memberof SubProjectResponseDto
     */
    modelType?: SubProjectResponseDtoModelTypeEnum;
}


/**
 * @export
 */
export const SubProjectResponseDtoModelTypeEnum = {
    Tissue: 'TISSUE',
    Cell: 'CELL',
    Multi: 'MULTI'
} as const;
export type SubProjectResponseDtoModelTypeEnum = typeof SubProjectResponseDtoModelTypeEnum[keyof typeof SubProjectResponseDtoModelTypeEnum];


/**
 * Check if a given object implements the SubProjectResponseDto interface.
 */
export function instanceOfSubProjectResponseDto(value: object): value is SubProjectResponseDto {
    return true;
}

export function SubProjectResponseDtoFromJSON(json: any): SubProjectResponseDto {
    return SubProjectResponseDtoFromJSONTyped(json, false);
}

export function SubProjectResponseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): SubProjectResponseDto {
    if (json == null) {
        return json;
    }
    return {
        
        'subProjectId': json['subProjectId'] == null ? undefined : json['subProjectId'],
        'annotationHistories': json['annotationHistories'] == null ? undefined : ((json['annotationHistories'] as Array<any>).map(AnnotationHistorySummaryDtoFromJSON)),
        'latestAnnotationHistoryId': json['latestAnnotationHistoryId'] == null ? undefined : json['latestAnnotationHistoryId'],
        'availableModels': json['availableModels'] == null ? undefined : ((json['availableModels'] as Array<any>).map(ModelSummaryDtoFromJSON)),
        'modelType': json['modelType'] == null ? undefined : json['modelType'],
    };
}

export function SubProjectResponseDtoToJSON(json: any): SubProjectResponseDto {
    return SubProjectResponseDtoToJSONTyped(json, false);
}

export function SubProjectResponseDtoToJSONTyped(value?: SubProjectResponseDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'subProjectId': value['subProjectId'],
        'annotationHistories': value['annotationHistories'] == null ? undefined : ((value['annotationHistories'] as Array<any>).map(AnnotationHistorySummaryDtoToJSON)),
        'latestAnnotationHistoryId': value['latestAnnotationHistoryId'],
        'availableModels': value['availableModels'] == null ? undefined : ((value['availableModels'] as Array<any>).map(ModelSummaryDtoToJSON)),
        'modelType': value['modelType'],
    };
}

