/* tslint:disable */
/* eslint-disable */
/**
 * Pathos
 * Pathos의 API 명세서입니다.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { ProjectModelsDto } from './ProjectModelsDto';
import {
    ProjectModelsDtoFromJSON,
    ProjectModelsDtoFromJSONTyped,
    ProjectModelsDtoToJSON,
    ProjectModelsDtoToJSONTyped,
} from './ProjectModelsDto';

/**
 * 프로젝트에서 사용 가능한 모델 목록 DTO
 * @export
 * @interface ModelsDto
 */
export interface ModelsDto {
    /**
     * 모델 타입
     * @type {string}
     * @memberof ModelsDto
     */
    modelType?: ModelsDtoModelTypeEnum;
    /**
     * 프로젝트에 연결된 모델 목록
     * @type {Array<ProjectModelsDto>}
     * @memberof ModelsDto
     */
    projectModels?: Array<ProjectModelsDto>;
}


/**
 * @export
 */
export const ModelsDtoModelTypeEnum = {
    Tissue: 'TISSUE',
    Cell: 'CELL',
    Multi: 'MULTI'
} as const;
export type ModelsDtoModelTypeEnum = typeof ModelsDtoModelTypeEnum[keyof typeof ModelsDtoModelTypeEnum];


/**
 * Check if a given object implements the ModelsDto interface.
 */
export function instanceOfModelsDto(value: object): value is ModelsDto {
    return true;
}

export function ModelsDtoFromJSON(json: any): ModelsDto {
    return ModelsDtoFromJSONTyped(json, false);
}

export function ModelsDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelsDto {
    if (json == null) {
        return json;
    }
    return {
        
        'modelType': json['modelType'] == null ? undefined : json['modelType'],
        'projectModels': json['projectModels'] == null ? undefined : ((json['projectModels'] as Array<any>).map(ProjectModelsDtoFromJSON)),
    };
}

export function ModelsDtoToJSON(json: any): ModelsDto {
    return ModelsDtoToJSONTyped(json, false);
}

export function ModelsDtoToJSONTyped(value?: ModelsDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'modelType': value['modelType'],
        'projectModels': value['projectModels'] == null ? undefined : ((value['projectModels'] as Array<any>).map(ProjectModelsDtoToJSON)),
    };
}

