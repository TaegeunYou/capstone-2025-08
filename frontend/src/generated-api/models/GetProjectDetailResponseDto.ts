/* tslint:disable */
/* eslint-disable */
/**
 * Pathos
 * Pathos의 API 명세서입니다.
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AnalyticsDto } from './AnalyticsDto';
import {
    AnalyticsDtoFromJSON,
    AnalyticsDtoFromJSONTyped,
    AnalyticsDtoToJSON,
    AnalyticsDtoToJSONTyped,
} from './AnalyticsDto';
import type { SlideDto } from './SlideDto';
import {
    SlideDtoFromJSON,
    SlideDtoFromJSONTyped,
    SlideDtoToJSON,
    SlideDtoToJSONTyped,
} from './SlideDto';
import type { LabelDto } from './LabelDto';
import {
    LabelDtoFromJSON,
    LabelDtoFromJSONTyped,
    LabelDtoToJSON,
    LabelDtoToJSONTyped,
} from './LabelDto';
import type { SlideSummaryDto } from './SlideSummaryDto';
import {
    SlideSummaryDtoFromJSON,
    SlideSummaryDtoFromJSONTyped,
    SlideSummaryDtoToJSON,
    SlideSummaryDtoToJSONTyped,
} from './SlideSummaryDto';
import type { ModelProcessDto } from './ModelProcessDto';
import {
    ModelProcessDtoFromJSON,
    ModelProcessDtoFromJSONTyped,
    ModelProcessDtoToJSON,
    ModelProcessDtoToJSONTyped,
} from './ModelProcessDto';

/**
 * 
 * @export
 * @interface GetProjectDetailResponseDto
 */
export interface GetProjectDetailResponseDto {
    /**
     * 프로젝트 id
     * @type {number}
     * @memberof GetProjectDetailResponseDto
     */
    projectId?: number;
    /**
     * 프로젝트명
     * @type {string}
     * @memberof GetProjectDetailResponseDto
     */
    title?: string;
    /**
     * 프로젝트 설명
     * @type {string}
     * @memberof GetProjectDetailResponseDto
     */
    description?: string;
    /**
     * 모델 타입
     * @type {string}
     * @memberof GetProjectDetailResponseDto
     */
    modelType?: GetProjectDetailResponseDtoModelTypeEnum;
    /**
     * 모델명
     * @type {string}
     * @memberof GetProjectDetailResponseDto
     */
    modelName?: string;
    /**
     * 프로젝트 생성일
     * @type {string}
     * @memberof GetProjectDetailResponseDto
     */
    createdAt?: string;
    /**
     * 프로젝트 수정일
     * @type {string}
     * @memberof GetProjectDetailResponseDto
     */
    updatedAt?: string;
    /**
     * 
     * @type {SlideSummaryDto}
     * @memberof GetProjectDetailResponseDto
     */
    slideSummary?: SlideSummaryDto;
    /**
     * 
     * @type {ModelProcessDto}
     * @memberof GetProjectDetailResponseDto
     */
    modelProcess?: ModelProcessDto;
    /**
     * 
     * @type {Array<LabelDto>}
     * @memberof GetProjectDetailResponseDto
     */
    labels?: Array<LabelDto>;
    /**
     * 
     * @type {Array<SlideDto>}
     * @memberof GetProjectDetailResponseDto
     */
    slides?: Array<SlideDto>;
    /**
     * 
     * @type {AnalyticsDto}
     * @memberof GetProjectDetailResponseDto
     */
    analytics?: AnalyticsDto;
}


/**
 * @export
 */
export const GetProjectDetailResponseDtoModelTypeEnum = {
    Tissue: 'TISSUE',
    Cell: 'CELL',
    Multi: 'MULTI'
} as const;
export type GetProjectDetailResponseDtoModelTypeEnum = typeof GetProjectDetailResponseDtoModelTypeEnum[keyof typeof GetProjectDetailResponseDtoModelTypeEnum];


/**
 * Check if a given object implements the GetProjectDetailResponseDto interface.
 */
export function instanceOfGetProjectDetailResponseDto(value: object): value is GetProjectDetailResponseDto {
    return true;
}

export function GetProjectDetailResponseDtoFromJSON(json: any): GetProjectDetailResponseDto {
    return GetProjectDetailResponseDtoFromJSONTyped(json, false);
}

export function GetProjectDetailResponseDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetProjectDetailResponseDto {
    if (json == null) {
        return json;
    }
    return {
        
        'projectId': json['projectId'] == null ? undefined : json['projectId'],
        'title': json['title'] == null ? undefined : json['title'],
        'description': json['description'] == null ? undefined : json['description'],
        'modelType': json['modelType'] == null ? undefined : json['modelType'],
        'modelName': json['modelName'] == null ? undefined : json['modelName'],
        'createdAt': json['createdAt'] == null ? undefined : json['createdAt'],
        'updatedAt': json['updatedAt'] == null ? undefined : json['updatedAt'],
        'slideSummary': json['slideSummary'] == null ? undefined : SlideSummaryDtoFromJSON(json['slideSummary']),
        'modelProcess': json['modelProcess'] == null ? undefined : ModelProcessDtoFromJSON(json['modelProcess']),
        'labels': json['labels'] == null ? undefined : ((json['labels'] as Array<any>).map(LabelDtoFromJSON)),
        'slides': json['slides'] == null ? undefined : ((json['slides'] as Array<any>).map(SlideDtoFromJSON)),
        'analytics': json['analytics'] == null ? undefined : AnalyticsDtoFromJSON(json['analytics']),
    };
}

export function GetProjectDetailResponseDtoToJSON(json: any): GetProjectDetailResponseDto {
    return GetProjectDetailResponseDtoToJSONTyped(json, false);
}

export function GetProjectDetailResponseDtoToJSONTyped(value?: GetProjectDetailResponseDto | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'projectId': value['projectId'],
        'title': value['title'],
        'description': value['description'],
        'modelType': value['modelType'],
        'modelName': value['modelName'],
        'createdAt': value['createdAt'],
        'updatedAt': value['updatedAt'],
        'slideSummary': SlideSummaryDtoToJSON(value['slideSummary']),
        'modelProcess': ModelProcessDtoToJSON(value['modelProcess']),
        'labels': value['labels'] == null ? undefined : ((value['labels'] as Array<any>).map(LabelDtoToJSON)),
        'slides': value['slides'] == null ? undefined : ((value['slides'] as Array<any>).map(SlideDtoToJSON)),
        'analytics': AnalyticsDtoToJSON(value['analytics']),
    };
}

