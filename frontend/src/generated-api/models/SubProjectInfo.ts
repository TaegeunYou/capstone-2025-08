/* tslint:disable */
/* eslint-disable */
/**
 * PlanList API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { Roi } from './Roi';
import {
    RoiFromJSON,
    RoiFromJSONTyped,
    RoiToJSON,
    RoiToJSONTyped,
} from './Roi';

/**
 * SubProject 단위 정보
 * @export
 * @interface SubProjectInfo
 */
export interface SubProjectInfo {
    /**
     * SubProject ID
     * @type {number}
     * @memberof SubProjectInfo
     */
    subProjectId?: number;
    /**
     * AnnotationHistory ID
     * @type {number}
     * @memberof SubProjectInfo
     */
    annotationHistoryId?: number;
    /**
     * ROI 리스트
     * @type {Array<Roi>}
     * @memberof SubProjectInfo
     */
    roi?: Array<Roi>;
}

/**
 * Check if a given object implements the SubProjectInfo interface.
 */
export function instanceOfSubProjectInfo(value: object): value is SubProjectInfo {
    return true;
}

export function SubProjectInfoFromJSON(json: any): SubProjectInfo {
    return SubProjectInfoFromJSONTyped(json, false);
}

export function SubProjectInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): SubProjectInfo {
    if (json == null) {
        return json;
    }
    return {
        
        'subProjectId': json['subProjectId'] == null ? undefined : json['subProjectId'],
        'annotationHistoryId': json['annotationHistoryId'] == null ? undefined : json['annotationHistoryId'],
        'roi': json['roi'] == null ? undefined : ((json['roi'] as Array<any>).map(RoiFromJSON)),
    };
}

export function SubProjectInfoToJSON(json: any): SubProjectInfo {
    return SubProjectInfoToJSONTyped(json, false);
}

export function SubProjectInfoToJSONTyped(value?: SubProjectInfo | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'subProjectId': value['subProjectId'],
        'annotationHistoryId': value['annotationHistoryId'],
        'roi': value['roi'] == null ? undefined : ((value['roi'] as Array<any>).map(RoiToJSON)),
    };
}

